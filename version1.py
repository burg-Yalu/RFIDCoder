# -*- coding: utf-8 -*-
import random

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 801, 561))
        self.tabWidget.setObjectName("tabWidget")
        self.SD = QtWidgets.QWidget()
        self.SD.setObjectName("SD")
        self.frame = QtWidgets.QFrame(self.SD)
        self.frame.setGeometry(QtCore.QRect(0, 0, 791, 521))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.SendDataBox = QtWidgets.QGroupBox(self.frame)
        self.SendDataBox.setGeometry(QtCore.QRect(20, 30, 321, 241))
        self.SendDataBox.setObjectName("SendDataBox")
        self.SendDataScrollArea = QtWidgets.QScrollArea(self.SendDataBox)
        self.SendDataScrollArea.setGeometry(QtCore.QRect(9, 46, 291, 181))
        self.SendDataScrollArea.setWidgetResizable(True)
        self.SendDataScrollArea.setObjectName("SendDataScrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 289, 179))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.SendDataTable = QtWidgets.QTableWidget(self.scrollAreaWidgetContents)
        self.SendDataTable.setGeometry(QtCore.QRect(0, 0, 291, 181))
        self.SendDataTable.setObjectName("SendDataTable")
        self.SendDataTable.setColumnCount(0)
        self.SendDataTable.setRowCount(0)
        self.SendDataScrollArea.setWidget(self.scrollAreaWidgetContents)
        self.InputSingleData = QtWidgets.QTextEdit(self.frame)
        self.InputSingleData.setGeometry(QtCore.QRect(140, 290, 111, 31))
        self.InputSingleData.setObjectName("InputSingleData")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(60, 300, 72, 15))
        self.label.setObjectName("label")
        self.CaculateBitSD = QtWidgets.QPushButton(self.frame)
        self.CaculateBitSD.setGeometry(QtCore.QRect(30, 330, 93, 28))
        self.CaculateBitSD.setObjectName("CaculateBitSD")
        self.CaculateSingleDataBit = QtWidgets.QTextEdit(self.frame)
        self.CaculateSingleDataBit.setGeometry(QtCore.QRect(140, 330, 111, 31))
        self.CaculateSingleDataBit.setObjectName("CaculateSingleDataBit")
        self.GenerateData = QtWidgets.QPushButton(self.frame)
        self.GenerateData.setGeometry(QtCore.QRect(440, 300, 111, 28))
        self.GenerateData.setObjectName("GenerateData")
        self.ReceiveDatalist = QtWidgets.QPushButton(self.frame)
        self.ReceiveDatalist.setGeometry(QtCore.QRect(590, 300, 101, 28))
        self.ReceiveDatalist.setObjectName("ReceiveDatalist")
        self.groupBox_3 = QtWidgets.QGroupBox(self.frame)
        self.groupBox_3.setGeometry(QtCore.QRect(60, 390, 641, 121))
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_2 = QtWidgets.QLabel(self.groupBox_3)
        self.label_2.setGeometry(QtCore.QRect(10, 30, 131, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox_3)
        self.label_3.setGeometry(QtCore.QRect(190, 30, 141, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox_3)
        self.label_4.setGeometry(QtCore.QRect(390, 30, 141, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.groupBox_3)
        self.label_5.setGeometry(QtCore.QRect(10, 70, 141, 16))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.groupBox_3)
        self.label_6.setGeometry(QtCore.QRect(260, 70, 131, 16))
        self.label_6.setObjectName("label_6")
        self.DataAmount1 = QtWidgets.QTextEdit(self.groupBox_3)
        self.DataAmount1.setGeometry(QtCore.QRect(100, 20, 71, 31))
        self.DataAmount1.setObjectName("DataAmount1")
        self.PassedData1 = QtWidgets.QTextEdit(self.groupBox_3)
        self.PassedData1.setGeometry(QtCore.QRect(290, 20, 71, 31))
        self.PassedData1.setObjectName("PassedData1")
        self.WorngDataAmount1 = QtWidgets.QTextEdit(self.groupBox_3)
        self.WorngDataAmount1.setGeometry(QtCore.QRect(470, 20, 71, 31))
        self.WorngDataAmount1.setObjectName("WorngDataAmount1")
        self.UndetectedDataAmount1 = QtWidgets.QTextEdit(self.groupBox_3)
        self.UndetectedDataAmount1.setGeometry(QtCore.QRect(140, 60, 71, 31))
        self.UndetectedDataAmount1.setObjectName("UndetectedDataAmount1")
        self.WrongPercent1 = QtWidgets.QTextEdit(self.groupBox_3)
        self.WrongPercent1.setGeometry(QtCore.QRect(340, 60, 71, 31))
        self.WrongPercent1.setObjectName("WrongPercent1")
        self.ReceiveDataBox = QtWidgets.QGroupBox(self.frame)
        self.ReceiveDataBox.setGeometry(QtCore.QRect(420, 30, 321, 241))
        self.ReceiveDataBox.setObjectName("ReceiveDataBox")
        self.ReceiveDataScrollArea = QtWidgets.QScrollArea(self.ReceiveDataBox)
        self.ReceiveDataScrollArea.setGeometry(QtCore.QRect(9, 46, 291, 181))
        self.ReceiveDataScrollArea.setWidgetResizable(True)
        self.ReceiveDataScrollArea.setObjectName("ReceiveDataScrollArea")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 289, 179))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.ReceiveDataTable = QtWidgets.QTableWidget(self.scrollAreaWidgetContents_2)
        self.ReceiveDataTable.setGeometry(QtCore.QRect(0, 0, 291, 181))
        self.ReceiveDataTable.setObjectName("ReceiveDataTable")
        self.ReceiveDataTable.setColumnCount(0)
        self.ReceiveDataTable.setRowCount(0)
        self.ReceiveDataScrollArea.setWidget(self.scrollAreaWidgetContents_2)
        self.tabWidget.addTab(self.SD, "")

        self.H = QtWidgets.QWidget()
        self.H.setObjectName("H")
        self.tabWidget.addTab(self.H, "")
        self.CRC = QtWidgets.QWidget()
        self.CRC.setObjectName("CRC")
        self.tabWidget.addTab(self.CRC, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.GenerateData.clicked.connect(self.generate_data)
        self.ReceiveDatalist.clicked.connect(self.receive_data)

    def generate_data(self):
        # 生成长度为100的8位二进制数组
        self.data = []
        for _ in range(100):
            binary_data = ''.join(random.choice('01') for _ in range(8))  # 随机生成8位二进制数据
            parity_bit = self.calculate_parity(binary_data)  # 计算奇偶校验位
            self.data.append((binary_data, parity_bit))

        # 计算校验数据
        self.PassedData1.setText(str(sum(1 for data, parity in self.data if parity == self.calculate_parity(data))))
        self.WorngDataAmount1.setText(
            str(sum(1 for data, parity in self.data if parity != self.calculate_parity(data))))
        self.DataAmount1.setText(str(len(self.data)))  # 总数据量
        self.UndetectedDataAmount1.setText('0')  # 初步设定无异常数据，后面再根据修改情况调整
        wrong_and_undetected = int(self.WorngDataAmount1.toPlainText())  # 错误数据数量
        total_data = int(self.DataAmount1.toPlainText())
        self.WrongPercent1.setText(f"{(wrong_and_undetected / total_data) * 100:.2f}%")  # 错误率

        # 清空表格并填充新的数据
        self.SendDataTable.setRowCount(100)  # 设置100行
        self.SendDataTable.setColumnCount(2)  # 设置2列

        for row, (data, parity) in enumerate(self.data):
            self.SendDataTable.setItem(row, 0, QtWidgets.QTableWidgetItem(data))  # 第一列：8位二进制数据
            self.SendDataTable.setItem(row, 1, QtWidgets.QTableWidgetItem(parity))  # 第二列：奇偶校验位

        # 调整表格列宽度以适应内容
        self.SendDataTable.horizontalHeader().setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)
        self.SendDataTable.horizontalHeader().setSectionResizeMode(1, QtWidgets.QHeaderView.Stretch)

    def calculate_parity(self, binary_data):
        # 计算奇偶校验位：统计1的个数，如果为偶数则校验位为0，否则为1
        ones_count = binary_data.count('1')
        return '0' if ones_count % 2 == 0 else '1'

    def receive_data(self):
        # 随机修改不超过10个元素，每个元素修改1到2位
        self.modified_data = []
        undetected1=0;

        # 随机选择10个位置进行修改（最多10个元素）
        indices_to_modify = random.sample(range(100), min(10, len(self.data)))  # 随机选择最多10组数据

        for idx in range(100):
            binary_data, original_parity = self.data[idx]

            # 如果当前数据组被选中进行修改
            if idx in indices_to_modify:
                modified_binary = list(binary_data)  # 将字符串转换为列表便于修改
                num_changes = random.randint(1, 2)  # 随机选择修改1到2位

                for _ in range(num_changes):
                    index = random.randint(0, 7)  # 随机选择一个位置
                    modified_binary[index] = '1' if modified_binary[index] == '0' else '0'  # 改变该位

                modified_binary = ''.join(modified_binary)
                modified_parity = self.calculate_parity(modified_binary)
                self.modified_data.append((modified_binary, original_parity, modified_parity))
                if modified_binary != binary_data and original_parity == modified_parity:undetected1+=1
            else:
                # 未被选中的数据保持原样
                self.modified_data.append((binary_data, original_parity, original_parity))

        # 清空接收数据表格并填充新的数据
        self.ReceiveDataTable.setRowCount(len(self.modified_data))  # 设置行数为修改后的数据长度
        self.ReceiveDataTable.setColumnCount(3)  # 设置3列

        for row, (modified_binary, original_parity, modified_parity) in enumerate(self.modified_data):
            self.ReceiveDataTable.setItem(row, 0, QtWidgets.QTableWidgetItem(modified_binary))  # 修改后的二进制数据
            self.ReceiveDataTable.setItem(row, 1, QtWidgets.QTableWidgetItem(original_parity))  # 原始校验位
            self.ReceiveDataTable.setItem(row, 2, QtWidgets.QTableWidgetItem(modified_parity))  # 新计算的校验位

        # 更新数据统计
        passed = sum(
            1 for data, original_parity, modified_parity in self.modified_data if original_parity == modified_parity)
        wrong = sum(
            1 for data, original_parity, modified_parity in self.modified_data if original_parity != modified_parity)


        # undetected 的计算：修改后的数据与原数据不一致，且原始校验位和修改后的校验位一致

        self.PassedData1.setText(str(passed))
        self.WorngDataAmount1.setText(str(wrong))
        self.UndetectedDataAmount1.setText(str(undetected1))  # 更新 undetected 数据

        # 计算百分比
        total = len(self.modified_data)
        wrong_and_undetected = wrong + undetected1
        self.WrongPercent1.setText(f"{(wrong_and_undetected / total) * 100:.2f}%")

        # 清空接收数据表格并填充新的数据
        self.ReceiveDataTable.setRowCount(len(self.modified_data))  # 设置行数为修改后的数据长度
        self.ReceiveDataTable.setColumnCount(3)  # 设置3列

        for row, (modified_binary, original_parity, modified_parity) in enumerate(self.modified_data):
            # 更新表格内容
            self.ReceiveDataTable.setItem(row, 0, QtWidgets.QTableWidgetItem(modified_binary))  # 第一列：修改后的8位数据
            self.ReceiveDataTable.setItem(row, 1, QtWidgets.QTableWidgetItem(original_parity))  # 第二列：原始数据的奇偶校验位
            self.ReceiveDataTable.setItem(row, 2, QtWidgets.QTableWidgetItem(modified_parity))  # 第三列：修改后的奇偶校验位

            # 判断第二列和第三列的奇偶校验位是否相同
            if original_parity != modified_parity:
                # 如果第二列和第三列不同，设置该行文本为红色
                self.set_row_color(row, "red")
            elif modified_binary != self.data[row][0]:
                # 如果第二列和第三列相同，但修改后的数据与原数据不同，设置该行文本为绿色
                self.set_row_color(row, "green")

        # 调整表格列宽度以适应内容
        self.ReceiveDataTable.horizontalHeader().setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)
        self.ReceiveDataTable.horizontalHeader().setSectionResizeMode(1, QtWidgets.QHeaderView.Stretch)
        self.ReceiveDataTable.horizontalHeader().setSectionResizeMode(2, QtWidgets.QHeaderView.Stretch)

        # 获取表格宽度
        table_width = self.ReceiveDataTable.width()

        # 设置三列的宽度比例 2:1:1
        column_0_width = table_width * 2 / 4  # 第1列宽度
        column_1_width = table_width * 1 / 4  # 第2列宽度
        column_2_width = table_width * 1 / 4  # 第3列宽度

        # 设置列宽
        self.ReceiveDataTable.setColumnWidth(0, column_0_width)
        self.ReceiveDataTable.setColumnWidth(1, column_1_width)
        self.ReceiveDataTable.setColumnWidth(2, column_2_width)

    def set_row_color(self, row, color):
        # 设置行的颜色
        for col in range(3):
            item = self.ReceiveDataTable.item(row, col)
            if item:
                item.setForeground(QtGui.QColor(color))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.SendDataBox.setTitle(_translate("MainWindow", "发送数据"))
        self.label.setText(_translate("MainWindow", "数据："))
        self.CaculateBitSD.setText(_translate("MainWindow", "计算校验位"))
        self.GenerateData.setText(_translate("MainWindow", "产生发送数据"))
        self.ReceiveDatalist.setText(_translate("MainWindow", "接收数据"))
        self.groupBox_3.setTitle(_translate("MainWindow", "结果"))
        self.label_2.setText(_translate("MainWindow", "共传输数据："))
        self.label_3.setText(_translate("MainWindow", "检验通过数据："))
        self.label_4.setText(_translate("MainWindow", "出错数据："))
        self.label_5.setText(_translate("MainWindow", "未检出错误数据："))
        self.label_6.setText(_translate("MainWindow", "错误率："))
        self.ReceiveDataBox.setTitle(_translate("MainWindow", "发送数据"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.SD), _translate("MainWindow", "奇偶校验"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.H), _translate("MainWindow", "海明校验"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.CRC), _translate("MainWindow", "CRC冗余校验"))


